---
title: "Police Arrests and Ethnic Background"
author: "Aviral Bhardwaj"
date: today
date-format: long
number-sections: true
format: pdf
bibliography: references.bib
---

```{r}
#| echo: false
# All the required packages
## Installing Packages only needs to be done once

#install.packages("tidyverse")
#install.packages("tinytex")
#install.packages("opendatatoronto")
# install.packages("kableExtra")
# install.packages("patchwork")
```

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(opendatatoronto)
library(tinytex)
library(knitr)
library(dplyr)
library(ggplot2)
library(janitor)
library(patchwork)
```

```{r}
#| warning: false
#| message: false
#| include: false

# Get package data
	
# get package
package <- show_package("police-race-and-identity-based-data-collection-arrests-strip-searches")
package
 
# get all resources for this package
resources <- list_package_resources("police-race-and-identity-based-data-collection-arrests-strip-searches")
 
# identify datastore resources; by default, Toronto Open Data sets datastore resource format to CSV for non-geospatial and GeoJSON for geospatial resources
datastore_resources <- filter(resources, tolower(format) %in% c('csv', 'geojson'))
 
# load the first datastore resource as a sample
data <- filter(datastore_resources, row_number()==1) %>% get_resource()

# Save the data in CSV
write.csv(data, "../data/raw_data.csv")
```


## Introduction


## Data 
This data is sourced from the Toronto Open Data Portal `opendatatoronto` [@rOpenDataToronto]. The following data is utilized for a more in-depth analysis of arrests and strip searches involving various ethnic and identity-based groups in Toronto. The information is gathered by the Toronto Police Service (TPS) and is collected under the authority of the Police Services Act. Its purpose is to enhance comprehension of the relationship between the police and the community. The data covers the period from 2020 to 2021.

The data underwent cleaning and analysis using the R programming language [@r]. Cleaning was performed with the `tidyverse` package [@rTidyverse], involving the removal of unnecessary columns for the analysis. Subsequently, analysis was conducted utilizing the `dplyr` package [@rDplyr], with the data grouped by ethnic and identity-based categories. Visualization was then executed using the `ggplot2` package [@rGgplot2], depicting the number of arrests and strip searches across various ethnic and identity-based groups.

The raw data included 32,000 arrests data with 26 variables of analyzable data, that included variables such as Arrest year, Arrest_Month, Perceived Race, Age Group, Youth at Arrest and Booked which we will be using for the paper.

```{r}
#| warning: false
#| message: false
#| include: false

# Adjusting and cleaning the name of the variable
cleaned_data <- data %>% 
  clean_names() %>% 
  clean_names(case = "snake")

cleaned_data <- cleaned_data |>
  select(
    arrest_year, perceived_race, age_group_at_arrest, youth_at_arrest_under_18_years, booked, search_reason_cause_injury, search_reason_assist_escape, search_reason_possess_weapons, search_reason_possess_evidence)

# Combining the columns that are similar
cleaned_data <- cleaned_data %>%
  mutate(search_reason = case_when(
    search_reason_cause_injury == 1 ~ "1",
    search_reason_assist_escape == 1 ~ "1",
    search_reason_possess_weapons == 1 ~ "1",
    search_reason_possess_evidence == 1 ~ "1",
    TRUE ~ "0"
  ))

# Rename the columns
cleaned_data <- cleaned_data %>%
  rename(
    age_group = age_group_at_arrest,
    youth_at_arrest_under_18_years = youth_at_arrest_under_18_years
  )

# Mutating the date for age groups involving Aged 17 years and younger and Aged 17 years and under essentially they mean the same thing
cleaned_data <- cleaned_data %>%
  mutate(age_group = case_when(
    age_group == "Aged 17 years and younger" ~ "Under 18 years",
    age_group == "Aged 17 years and under" ~ "Under 18 years",
    TRUE ~ age_group
  ))

# Mutating for booked with NA values
cleaned_data <- cleaned_data %>%
  mutate(booked = case_when(
    is.na(booked) ~ "0",
    booked == 1 ~ "1",
    TRUE ~ "Not Booked"
  ))

cleaned_data <- cleaned_data |>
  select(
    arrest_year, perceived_race, age_group, youth_at_arrest_under_18_years, booked, search_reason)

write.csv(cleaned_data, "../data/cleaned_data.csv")

```

```{r}
#| warning: false
#| message: false
#| include: false
# Make a table of the data with the number of arrests and strip searches by ethinic and identity based groups for the year 2020, and 2021
# cleaned_data <- read.csv("../data/cleaned_data.csv")


# List of the ethnic and identity based groups that are in the data
# ethnic_backgrounds <- cleaned_data |> select(perceived_race) |> unique() 

# List of the years that are in the data
# years <- cleaned_data |> select(arrest_year) |> unique()

# List of the age groups that are in the data
# age_groups <- cleaned_data |> select(age_group) |> unique()

write.csv(cleaned_data, "../data/cleaned_data.csv")
```


```{r}
cleaned_data <- read.csv("../data/cleaned_data.csv")

table <- cleaned_data |>
  group_by(arrest_year, perceived_race, search_reason) %>%
  summarise(n = n(), .groups = "drop") %>%
  arrange(desc(perceived_race)) %>%
  pivot_wider(names_from = arrest_year, values_from = n, values_fill = 0)

table <- pivot_longer(table, cols = c("2020", "2021"), names_to = "year", values_to = "value")

ggplot(table, aes(x = perceived_race, y = value, fill = factor(search_reason))) +
  geom_bar(stat = "identity", position = "fill") +
  facet_wrap(~ year, scales = "free_y") +
  labs(title = "Percent Stacked Bar Chart Based on 'booked'",
       x = "Perceived Race",
       y = "Percentage",
       fill = "Search Reason") +
  theme_minimal() +
  scale_fill_discrete(labels = c("Not Searched", "Searched")) +
  theme(legend.position = "right") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
#| warning: false
#| message: false
#| echo: false
# Generate a table of the data with the number of arrests and strip searches by ethinic and identity based groups for the year 2020, and 2021
cleaned_data <- read.csv("../data/cleaned_data.csv")

table1 <- cleaned_data |> 
  group_by(arrest_year, perceived_race) |> 
  summarise(n = n(), .groups = "drop") |> 
  arrange(desc(n)) |> 
  pivot_wider(names_from = arrest_year, values_from = n, values_fill = 0)


kable(table1,
      caption = "Number of arrests by ethinic background for the year 2020, and 2021",
      align = "c",
      col.names = c("Ethinic and Identity Based Groups", "2020", "2021"),
      booktabs = TRUE)

table1_long <- pivot_longer(table1, cols = c("2020", "2021"), names_to = "year", values_to = "value")
```

```{r}
#| warning: false
#| message: false
#| echo: false
table2 <- cleaned_data |>
  filter(booked == 1) |>
  group_by(arrest_year, perceived_race) |>
  summarise(n = n(), .groups = "drop") |>
  arrange(desc(n)) |>
  pivot_wider(names_from = arrest_year, values_from = n, values_fill = 0)


kable(table2,
      caption = "Arrests Booked by ethnic background for the year 2020, and 2021",
      align = "c",
      col.names = c("Ethinic and Identity Based Groups", "2020", "2021"),
      booktabs = TRUE)

table2_long <- pivot_longer(table2, cols = c("2020", "2021"), names_to = "year", values_to = "value")
```

```{r}
#| warning: false
#| message: false
#| echo: false
cleaned_data <- read.csv("../data/cleaned_data.csv")

cleaned_data <- cleaned_data |>
  select(
    arrest_year,
    perceived_race,
    booked
  )

# Group 
cleaned_data <- cleaned_data %>%
  group_by(arrest_year, perceived_race, booked) %>%
  summarise(n = n(), .groups = "drop") %>%
  arrange(desc(perceived_race)) %>%
  pivot_wider(names_from = arrest_year, values_from = n, values_fill = 0)

cleaned_data <- pivot_longer(cleaned_data, cols = c("2020", "2021"), names_to = "year", values_to = "value")
```

```{r police_arrests, fig.cap = "Number of arrests by ethinic background for the year 2020, and 2021", fig.width=10, fig.height=6, fig.align='center'}
ggplot(cleaned_data, aes(x = perceived_race, y = value, fill = factor(booked))) +
  geom_bar(stat = "identity") +
  facet_wrap(~ year, scales = "free_y") +
  labs(title = "Stacked Bar Chart Based on 'booked'",
       x = "Perceived Race",
       y = "Value",
       fill = "Booked") +
  theme_minimal() +
  scale_fill_discrete(labels = c("Not Booked", "Booked")) +
  theme(legend.position = "right") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
#| warning: false
#| message: false
#| echo: false
cleaned_data <- read.csv("../data/cleaned_data.csv")
cleaned_data <- cleaned_data |>
  select(
    arrest_year,
    perceived_race,
    age_group
  )

# Group 
cleaned_data <- cleaned_data %>%
  group_by(arrest_year, perceived_race, age_group) %>%
  summarise(n = n(), .groups = "drop") %>%
  arrange(desc(perceived_race)) %>%
  pivot_wider(names_from = arrest_year, values_from = n, values_fill = 0)


cleaned_data <- pivot_longer(cleaned_data, cols = c("2020", "2021"), names_to = "year"  ,values_to = "value")
```

```{r fig2, fig.cap = "Number of arrests by ethinic background for the year 2020, and 2021", fig.width=10, fig.height=6, fig.align='center'}
#| warning: false
#| message: false
#| echo: false
#| eval: true
# Dot Plot
ggplot(cleaned_data, aes(x = perceived_race, y = value, fill = factor(age_group))) +
  geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.7, binwidth = 80) +
  facet_wrap(~ year, scales = "free_y") +
  labs(title = "Stacked Bar Chart Based on 'booked'",
       x = "Perceived Race",
       y = "Value",
       fill = "Booked") +
  theme_minimal() +
  theme(legend.position = "bottom") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r fig3, fig.cap = "Number of arrests by ethinic background for the year 2020, and 2021", fig.width=10, fig.height=6, fig.align='center'}
#| warning: false
#| message: false
#| echo: false
#| eval: true
# Bar plot
ggplot(cleaned_data, aes(x = perceived_race, y = value, fill = factor(age_group))) +
  geom_bar(stat = "identity") +
  facet_wrap(~ year, scales = "free_y") +
  labs(title = "Stacked Bar Chart Based on 'booked'",
       x = "Perceived Race",
       y = "Value",
       fill = "Booked") +
  theme_minimal() +
  theme(legend.position = "right") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

## References



